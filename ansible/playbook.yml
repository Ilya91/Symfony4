---
- hosts: staging
  environment:
      APP_ENV: prod
      APP_SECRET: fcb645b39a34b57d56b186e9e42b5453
      DATABASE_URL: pgsql://app:secret@127.0.0.1:5432/app
      SYMFONY_ENV: "{{ symfony_env|lower }}"

  vars:
      symfony_root_dir: /var/www/project
      composer_path: /usr/local/bin/composer
      symfony_web_dir: "{{ symfony_root_dir }}/manager/public"
      symfony_var_dir: "{{ symfony_root_dir }}/manager/var"
      symfony_console_path: "{{ symfony_root_dir }}/manager/bin/console"

  vars_prompt:
    - name: symfony_env
      prompt: "Enter the environment for your Symfony app (prod|dev|test)"
      default: prod
      private: no

  pre_tasks:
    - name: Convert entered Symfony environment to lowercase
      set_fact:
        symfony_env: "{{ symfony_env|lower }}"
      tags:
        - always

    - name: Update APT package manager repositories cache
      become: true
      apt:
        update_cache: yes

    - name: Upgrade installed packages
      become: true
      apt:
        upgrade: safe

  roles:
    - nginx
    - role: DavidWittman.redis
      become: true

  tasks:
    - ping: ~

    - debug:
        var: ansible_env
        tags:
          - deploy

    - debug:
        var: symfony_env

    - name: Install low-level utilities
      become: true
      apt:
        name: "{{ item }}"
      with_items:
        - zip
        - unzip

    - name: Install Git VCS
      become: true
      apt:
        name: git
        state: latest

    - name: Add PHP 7 PPA repository
      become: true
      apt_repository:
        repo: 'ppa:ondrej/php'

    - name: Install PHP CLI
      apt:
        name: php7.2-cli

    - name: Install PHP packages
      become: true
      apt:
        name:
          - php7.2-cli
          - php7.2-curl
          - php7.2-fpm
          - php7.2-intl
          - php7.2-mysql
          - php7.2-pdo
          - php7.2-pgsql
          - php7.2-xml
        state: latest

    - name: Set date.timezone for FPM
      become: true
      lineinfile:
        path: /etc/php/7.2/cli/php.ini
        regexp: "date.timezone ="
        line: "date.timezone = UTC"
      notify: Restart PHP-FPM

    - name: Create project directory and set its permissions
      tags:
        - deploy
      become: true
      file:
        path: "{{ symfony_root_dir }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        recurse: yes

    - name: Checkout Git repository
      register: repo_code
      tags:
        - deploy
      git:
        repo: https://github.com/Ilya91/Symfony4.git
        dest: "{{ symfony_root_dir }}"
        force: yes

    - name: Register code_changed variable
      tags:
        - deploy
      set_fact:
        code_changed: repo_code.changed

    - name: Check for Composer
      stat:
        path: "{{ composer_path }}"
      register: composer_stat
      tags:
        - deploy

    - name: Download Composer
      script: scripts/install_composer.sh
      when: not composer_stat.stat.exists

    - name: Move Composer globally
      become: true
      command: mv composer.phar /usr/local/bin/composer
      when: not composer_stat.stat.exists

    - name: Set permissions on Composer
      become: true
      file:
        path: /usr/local/bin/composer
        mode: "a+x"

    - name: Make sure composer is at its latest version
      composer:
        working_dir: "{{ symfony_root_dir }}"
        command: self-update
      register: composer_self_update
      changed_when: not composer_self_update.stdout is not search('You are already using composer version')
      tags:
        - deploy

    - import_tasks: ./includes/symfony-bootstrap.yml

  handlers:
    - name: Restart PHP-FPM
      become: true
      service:
        name: php7.2-fpm
        state: restarted

